# Generated by Django 2.2 on 2019-09-11 19:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Award_list',
            fields=[
                ('award_id', models.AutoField(primary_key=True, serialize=False)),
                ('award_name', models.CharField(max_length=50)),
                ('award_image', models.ImageField(default='award.jpg', upload_to='award_pics')),
            ],
        ),
        migrations.CreateModel(
            name='Cast_list',
            fields=[
                ('cast_id', models.AutoField(primary_key=True, serialize=False)),
                ('case_name', models.CharField(max_length=50)),
                ('cast_iamge', models.ImageField(default='cast.jpg', upload_to='cast_pics')),
            ],
        ),
        migrations.CreateModel(
            name='Country_list',
            fields=[
                ('country_id', models.AutoField(primary_key=True, serialize=False)),
                ('country_name', models.CharField(max_length=50)),
                ('country_short_code', models.CharField(max_length=5)),
                ('country_image', models.ImageField(default='country.jpg', upload_to='country_pics')),
            ],
        ),
        migrations.CreateModel(
            name='Director_list',
            fields=[
                ('director_id', models.AutoField(primary_key=True, serialize=False)),
                ('director_name', models.CharField(max_length=50)),
                ('director_image', models.ImageField(default='cast.jpg', upload_to='director_pics')),
            ],
        ),
        migrations.CreateModel(
            name='Genre_list',
            fields=[
                ('genre_id', models.AutoField(primary_key=True, serialize=False)),
                ('genre_name', models.CharField(max_length=40)),
                ('genre_image', models.ImageField(default='genre.jpg', upload_to='genre_pics')),
            ],
        ),
        migrations.CreateModel(
            name='Language_list',
            fields=[
                ('language_id', models.AutoField(primary_key=True, serialize=False)),
                ('language_name', models.CharField(max_length=60)),
                ('language_short_code', models.TextField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Movies_list',
            fields=[
                ('movies_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('story_line', models.TextField(default='')),
                ('cost', models.PositiveIntegerField(default=0)),
                ('release_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('imdb_rating', models.FloatField()),
                ('imdb_link', models.TextField()),
                ('trailer_link', models.TextField()),
                ('views', models.PositiveIntegerField(default=0)),
                ('likes', models.PositiveIntegerField(default=0)),
                ('dislike', models.PositiveIntegerField(default=0)),
                ('ratting', models.FloatField()),
                ('tags', models.TextField()),
                ('movies_season_id', models.PositiveIntegerField(default=0)),
                ('movie_episode_id', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Movies_type_list',
            fields=[
                ('movies_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('movies_type_name', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='Quality_list',
            fields=[
                ('quality_id', models.AutoField(primary_key=True, serialize=False)),
                ('quality_name', models.CharField(max_length=50)),
                ('quality_priority', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Server_list',
            fields=[
                ('server_id', models.AutoField(primary_key=True, serialize=False)),
                ('server_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Server_type_list',
            fields=[
                ('server_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('server_type', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Subtitle_list',
            fields=[
                ('subtitle_id', models.AutoField(primary_key=True, serialize=False)),
                ('subtitle_name', models.CharField(max_length=40)),
                ('subtitle_short_code', models.CharField(max_length=5)),
            ],
            options={
                'verbose_name_plural': 'subtitle name',
            },
        ),
        migrations.CreateModel(
            name='Writer_list',
            fields=[
                ('writer_id', models.AutoField(primary_key=True, serialize=False)),
                ('writer_name', models.CharField(max_length=50)),
                ('writer_image', models.ImageField(default='writer.jpg', upload_to='writer_pics')),
            ],
        ),
        migrations.CreateModel(
            name='Season_list',
            fields=[
                ('season_id', models.AutoField(primary_key=True, serialize=False)),
                ('movies_season_id', models.PositiveIntegerField()),
                ('season_no', models.PositiveIntegerField()),
                ('season_name', models.CharField(max_length=50)),
                ('season_desc', models.TextField()),
                ('season_movies_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies_list.Movies_list')),
                ('season_user_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='movies_list',
            name='Quality',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='movies_list.Quality_list'),
        ),
        migrations.AddField(
            model_name='movies_list',
            name='awards',
            field=models.ManyToManyField(to='movies_list.Award_list'),
        ),
        migrations.AddField(
            model_name='movies_list',
            name='cast',
            field=models.ManyToManyField(to='movies_list.Cast_list'),
        ),
        migrations.AddField(
            model_name='movies_list',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='movies_list.Country_list'),
        ),
        migrations.AddField(
            model_name='movies_list',
            name='director',
            field=models.ManyToManyField(to='movies_list.Director_list'),
        ),
        migrations.AddField(
            model_name='movies_list',
            name='genre',
            field=models.ManyToManyField(to='movies_list.Genre_list'),
        ),
        migrations.AddField(
            model_name='movies_list',
            name='language',
            field=models.ManyToManyField(to='movies_list.Language_list'),
        ),
        migrations.AddField(
            model_name='movies_list',
            name='movies_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='movies_list.Movies_type_list'),
        ),
        migrations.AddField(
            model_name='movies_list',
            name='movies_user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='movies_list',
            name='writer',
            field=models.ManyToManyField(to='movies_list.Writer_list'),
        ),
        migrations.CreateModel(
            name='Link_list',
            fields=[
                ('link_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('link', models.TextField()),
                ('upvote', models.PositiveIntegerField(default=0)),
                ('downvote', models.PositiveIntegerField(default=0)),
                ('views', models.PositiveIntegerField(default=0)),
                ('link_created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('quality', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='movies_list.Quality_list')),
                ('server_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='movies_list.Server_list')),
                ('server_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='movies_list.Server_type_list')),
                ('subtitle', models.ManyToManyField(to='movies_list.Subtitle_list')),
            ],
        ),
        migrations.CreateModel(
            name='Episode_list',
            fields=[
                ('episode_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('adult', models.BooleanField(default=False)),
                ('filler', models.BooleanField(default=False)),
                ('desc', models.TextField()),
                ('episode_views', models.PositiveIntegerField(default=0)),
                ('episode_like', models.PositiveIntegerField(default=0)),
                ('episode_dislike', models.PositiveIntegerField(default=0)),
                ('episode_season_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies_list.Season_list')),
                ('episode_user_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
